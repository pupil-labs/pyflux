#version 430 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTex;
layout (location = 2) in vec3 aNormal;
layout (location = 3) in float id;

out vec3 FragNormal;
out vec3 FragPos;

out VS_OUT {
    vec3 FragPos;
    vec3 FragNormal;
    vec3 ViewPos;
    vec3 ViewNormal;
    float id;
} vs_out;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
    vs_out.FragNormal = mat3(transpose(inverse(model))) * aNormal; 
    vs_out.FragPos = vec3(model * vec4(aPos, 1.0));

    vs_out.ViewPos = vec3(view * model * vec4(aPos, 1.0));
    vs_out.ViewNormal = vec3(view * model * vec4(aNormal, 0.0));

    vs_out.id = id;

    FragNormal = mat3(transpose(inverse(model))) * aNormal; 
    FragPos = vec3(model * vec4(aPos, 1.0));

    gl_Position = projection * view * model * vec4(aPos, 1.0);
    
}